---
# Ansibilization of master side of
# https://kubernetes.io/docs/getting-started-guides/fedora/fedora_manual_config/

- name: ensure rpms are at the latest version
  package: name={{ item }} state=latest
  with_items:
  - etcd
  - kubernetes
  - python-firewall
  - skydns

#TODO: Restore admission control to this line:
#'"--admission-control=NamespaceLifecycle,NamespaceExists,SecurityContextDeny,ServiceAccount,LimitRanger,ResourceQuota"'}

- name: configure k8s api server
  lineinfile:
    dest: /etc/kubernetes/apiserver
    regexp: "^{{ item.key }}="
    line:  "{{ item.key }}={{ item.line }}"
    state: present
  register: k8s_conf
  with_items:
    - {key: 'KUBE_ADMISSION_CONTROL',
       line: '"--admission-control=NamespaceLifecycle,NamespaceExists,SecurityContextDeny,LimitRanger,ResourceQuota"'}
    - {key: 'KUBE_API_ADDRESS', line: '"--address=0.0.0.0"'}
    - {key: "KUBE_API_ARGS", line: '"--service-account-key-file=/etc/kubernetes/serviceaccount.key"'}
 
- name: generate key for master
  command: openssl genrsa -out /etc/kubernetes/serviceaccount.key 2048

- name: configure etcd  master listening host
  lineinfile:
    dest: /etc/etcd/etcd.conf 
    regexp: "^ETCD_LISTEN_CLIENT_URLS="
    line: ETCD_LISTEN_CLIENT_URLS="http://0.0.0.0:2379"
    state: present
  register: etcdconf

- firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  with_items:
  - 8080
  - 6443
  - 53

- name: start the etcd server
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - etcd
  when: etcdconf.changed
  
- name: start the kubernetes API server
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
  when: k8s_conf.changed

- name: ensure the kubernetes services were started 
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - kube-apiserver
    - kube-controller-manager
    - kube-scheduler
    - etcd
    - skydns
