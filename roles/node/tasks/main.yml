---
- name: ensure kubernetes  is at the latest version
  package: name=kubernetes-node state=latest

- name: Make sure we can manage SELinux changes for lineinfile
  package: name=libselinux-python state=latest
   
- firewalld:
    port: "{{ item }}/tcp"
    permanent: true
    state: enabled
  with_items:
  - 4194
  - 10250
  - 10255

- name: configure k8s api server
  lineinfile:
    dest: /etc/kubernetes/kubelet
    regexp: "^{{ item.key }}="
    line:  "{{ item.key }}={{ item.line }}"
    state: present
  register: kubelet_conf
  with_items:
    - {key: 'KUBELET_ADDRESS',
       line: '"--address=0.0.0.0"'}
    - {key: 'KUBELET_HOSTNAME', line: '"--hostname-override={{ inventory_hostname }}"'}
    - {key: "KUBELET_API_SERVER", line: '"--api-servers=http://munchlax:8080"'}
    - {key: "KUBELET_ARGS", line: '"--cluster_dns=10.10.0.30 --cluster_domain=home.younglogic.net"'}

- name: configure kubernetes API server
  lineinfile:
    dest: /etc/kubernetes/config
    regexp: "^KUBELET_API_SERVER="  
    line: KUBELET_API_SERVER="--api-servers=http://munchlax:8080"
    state: present
  register: kubeapi


- name: restart the node services if required
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - kube-proxy
    - kubelet
  when: kubelet_conf.changed or kubeapi.changed


- name: configure docker to allow insecure registry access
  lineinfile:
    dest: /etc/sysconfig/docker
    regexp: "^INSECURE_REGISTRY="  
    line: INSECURE_REGISTRY='--insecure-registry  munchlax:5000'
    state: present
  register: dockerinsecure

- name: restart the node services if required
  service:
    name: "{{ item }}"
    state: restarted
  with_items:
    - docker
  when:  dockerinsecure.changed


- name: start the node services
  service:
    name: "{{ item }}"
    state: started
    enabled: yes
  with_items:
    - kube-proxy
    - kubelet
    - docker
